{"version":3,"file":"static/js/678.ae9735eb.chunk.js","mappings":"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","sources":["components/BeerCard.tsx","components/BeerModal.tsx","store/hooks.ts","pages/Beers.tsx","pages/Favorites.tsx"],"sourcesContent":["import React from 'react'\nimport { AiFillStar, AiOutlineStar } from 'react-icons/ai'\nimport { Beer } from '../types/beerType'\n\ninterface BeerCardProps {\n    beer: Beer\n    setModalOpen: React.Dispatch<React.SetStateAction<boolean>>\n    setBeer: React.Dispatch<React.SetStateAction<Beer | undefined>>\n}\n\nexport const BeerCard: React.FC<BeerCardProps> = ({ beer, setModalOpen, setBeer }) => {\n    const setModal = () => {\n        setModalOpen(true)\n        setBeer(beer)\n    }\n    return (\n        <div className=\"itemCard\" >\n            <div className=\"itemCard_header\">\n                <div className=\"itemCard_header_block\"></div>\n                <h2 className='itemCard_header_name'>{beer.name}</h2>\n                <div className=\"itemCard_header_block\"><AiOutlineStar className=\"itemCard_header_block_icon\" /></div>\n            </div>\n            <img className='itemCard_img' src={beer.image_url} />\n            <div className=\"itemCard_description\"><p>{beer.description}</p></div>\n            <div className=\"itemCard_footer\">\n                <div className=\"itemCard_footer_block\"></div>\n                <h2 className='itemCard_footer_name'></h2>\n                <div className=\"itemCard_footer_block\"><a onClick={() => setModal()}>more</a></div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { Beer } from '../types/beerType'\nimport { MdOutlineClose } from 'react-icons/md'\n\ninterface BeerModalProps {\n    beer: Beer | undefined\n    modalOpen: boolean\n    setModalOpen: React.Dispatch<React.SetStateAction<boolean>>\n    setBeer: React.Dispatch<React.SetStateAction<Beer | undefined>>\n}\n\nexport const BeerModal: React.FC<BeerModalProps> = ({ beer, setBeer, modalOpen, setModalOpen }) => {\n    const resetModal = () => {\n        setBeer(undefined)\n        setModalOpen(false)\n    }\n    return (<>\n        {modalOpen && (\n\n            <div className=\"itemModal\">\n                <div className=\"itemModal_content\">\n                    <div className=\"itemModal_content_header\">\n                        <div className=\"itemModal_content_header_block\"></div>\n                        <div className=\"itemModal_content_header_title\">\n                            <h1>{beer!.name}</h1>\n                        </div>\n                        <div className=\"itemModal_content_header_block\">\n                            <MdOutlineClose onClick={() => resetModal()} />\n                        </div>\n                    </div>\n                    <img className=\"itemModal_content_img\" src={beer!.image_url} alt=\"\" />\n                    <div className=\"itemModal_content_description\">\n                        {beer!.description}\n                    </div>\n                    <hr />\n                    <div className=\"itemModal_content_food\">\n                        <h3>Food Pairing</h3>\n                        <ul>\n                            {beer!.food_pairing.map((food, i) => <React.Fragment key={i}> <li>{food}</li></React.Fragment>)}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n        )}\n    </>\n    )\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport {AppDispach, RootState} from './store'\n\n\nexport const useAppDispatch = () => useDispatch<AppDispach>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> =useSelector","import React, { useEffect, useState } from 'react'\nimport { BeerCard } from '../components/BeerCard'\nimport { BeerModal } from '../components/BeerModal'\nimport { Loader } from '../components/Loader'\nimport { useAppDispatch, useAppSelector } from '../store/hooks'\nimport { initialData } from '../store/reducers/getInitialData'\nimport { Beer } from '../types/beerType'\n\ninterface BeersProps {\n\n}\n\nconst Beers: React.FC<BeersProps> = ({ }) => {\n    const [modalOpen, setModalOpen] = useState<boolean>(false)\n    const [beer, setBeer] = useState<Beer | undefined>(undefined)\n    const dispatch = useAppDispatch()\n    const { beers } = useAppSelector(({ beers }) => beers)\n\n    useEffect(() => {\n        dispatch(initialData())\n    }, [dispatch])\n    useEffect(() => { }, [beers, beer, modalOpen])\n    return (\n        <div className=\"beers\">\n            <div className=\"beers_title\">\n                <h1 className='beers_title'>beers</h1>\n\n                {beers ? (\n                    <div className=\"beers_grid\">\n                        {(beers!.map(beer =>\n                            <React.Fragment key={beer.id}>\n                                <BeerCard beer={beer} setBeer={setBeer} setModalOpen={setModalOpen} />\n                            </React.Fragment>))}\n                    </div>\n                ) : <Loader />}\n            </div>\n            <a href=\"\"> load more</a>\n            <BeerModal beer={beer} setBeer={setBeer} modalOpen={modalOpen} setModalOpen={setModalOpen} />\n        </div>\n    )\n}\n\nexport default Beers","import React from 'react'\n\ninterface FavoritesProps {\n\n}\n\nconst Favorites: React.FC<FavoritesProps> = ({ }) => {\n    return (\n        <div className=\"favorite\">Favorite</div>\n    )\n}\n\nexport default Favorites"],"names":["BeerCard","_ref","beer","setModalOpen","setBeer","_jsxs","className","children","_jsx","name","AiOutlineStar","src","image_url","description","onClick","BeerModal","modalOpen","_Fragment","MdOutlineClose","undefined","alt","food_pairing","map","food","i","React","useAppSelector","useSelector","useState","dispatch","useDispatch","beers","_ref2","useEffect","initialData","id","Loader","href"],"sourceRoot":""}